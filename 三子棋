//game.h.cpp
#define _CRT_SECURE_NO_WARNINGS 1
#define ROW 3
#define COL 3
#include <stdio.h>
#include <time.h>
#include <Windows.h>
void meau();
void DisplayBoard(char arr[ROW][COL], int row, int col);
void PlayMove(char arr[ROW][COL], int row, int col);
void ComputerMove(char arr[ROW][COL], int row, int col);
void Print(char arr[ROW][COL], int row, int col);
char Judge(char arr[ROW][COL], int row, int col);

//game.c.cpp
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h.cpp"
int main() {
	srand((unsigned)time(NULL));
	char arr[ROW][COL] = {0};
	int choice = 0;
	do {
		meau();
		scanf("%d", &choice);
		if (choice == 0) {
			break;
		}
		else if (choice != 1) {
			printf("请重新选择：");
			continue;
		}
		else {
			DisplayBoard(arr, ROW, COL);
		}
		char ch = '0';
		 do{
			 ch = '0';
			PlayMove(arr, ROW, COL);
			Print(arr, ROW, COL);
			ch = Judge(arr, ROW, COL);
			if (ch == '*') {
				printf("恭喜你你赢啦！！！\n");
				break;
			}
			ComputerMove(arr, ROW, COL);
			Print(arr, ROW, COL);
			ch = Judge(arr, ROW, COL);
			if (ch == '#') {
				printf("很遗憾你输了！！！\n");
				break;
			}
			else if (ch == 'L') {
				printf("平局！！！\n");
				break;
			}
			else continue;
		 } while (1);
	} while (0 != choice);
	return 0;
}

//test.c.cpp
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h.cpp"
void meau() {
	//system("cls");
	printf("------------\n");
	printf("---1.play---\n");
	printf("------------\n");
	printf("---0.exit---\n");
	printf("------------\n");
}
void DisplayBoard(char arr[ROW][COL], int row, int col) {
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++) {
		for (j = 0; j < col; j++) {
			arr[i][j] = ' ';
		}
	}
	for (i = 0; i < row; i++) {
		for (j = 0; j < col; j++) {
			printf(" %c ", arr[i][j]);
			if (j < col - 1) {
				printf("|");
			}
		}
		printf("\n");
		for (j = 0; j < col; j++) {
			if (i < row - 1) {
				printf("---");
				if (j < col - 1)
					printf("|");
			}
		}
		printf("\n");
	}
}
void PlayMove(char arr[ROW][COL], int row, int col) {
	int i = 0;
	int j = 0;
	printf("请输入坐标：\n");
	while (1) {
		scanf("%d,%d", &i, &j);
		if (i > row  || j > col ) {
			printf("超出坐标范围，请重新输入！！！\n");
			continue;
		}
		else if(arr[i-1][j-1] != ' ') {
			printf("此位置已小棋，请重新选择位置！！！\n");	
			continue;
		}
		else {
			arr[i-1][j-1] = '*';
			break;
		}
		
	}

}
void ComputerMove(char arr[ROW][COL], int row, int col) {
	int i = 0;
	int j = 0;
	while (1) {
		i = rand() % row;
		j = rand() % col;
		if (arr[i][j] == ' ') {
			arr[i][j] = '#';
			break;
		}
	}
	
}
void Print(char arr[ROW][COL], int row, int col) {
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++) {
		for (j = 0; j < col; j++) {
			printf(" %c ", arr[i][j]);
			if (j < col - 1) {
				printf("|");
			}
		}
		printf("\n");
		for (j = 0; j < col; j++) {
			if (i < row - 1) {
				printf("---");
				if (j < col - 1)
					printf("|");
			}
		}
		printf("\n");
	}
}
char Judge(char arr[ROW][COL], int row, int col) {
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++) {
		if (arr[i][0] == arr[i][1] && arr[i][1] == arr[i][2] && arr[j][1] != ' ') {
			return arr[i][0];
		}
	}
	for (j = 0; i < col; j++) {
		if (arr[0][1] == arr[1][j] && arr[1][j] == arr[2][j] && arr[1][j] != ' ') {
			return arr[0][j];
		}
	}
	if (arr[0][0] == arr[1][1] && arr[1][1] == arr[2][2] && arr[1][1] != ' ') {
		return arr[1][1];
	}
	if (arr[0][2] == arr[1][1] && arr[1][1] == arr[2][0] && arr[1][1] != ' ') {
		return arr[1][1];
	}
	int m = 0;
	int n = 0;
	for (m = 0; m < row; m++) {
		for (n = 0; n < col; n++) {
			if (arr[m][n] == ' ') {
				return 'C';
			}
		}
	}
	return 'L';
}
